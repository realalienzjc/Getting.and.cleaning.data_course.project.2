colnames(merged[1])
colnames(merged[2])
colnames(merged[3])
colnames(merged[])
getwd()
?cbind
x_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", sep="", header=F)
subject_train <-  read.csv("./UCI HAR Dataset/train/subject_train.txt", sep="", header=F)
y_train  <- read.csv("./UCI HAR Dataset/train/y_train.txt", sep="", header=F)
x_test <- read.csv("./UCI HAR Dataset/test/X_test.txt", sep="", header=F)
subject_test <-  read.csv("./UCI HAR Dataset/test/subject_test.txt", sep="", header=F)
y_test <- read.csv("./UCI HAR Dataset/test/y_test.txt", sep="", header=F)
train <- cbind(subject=subject_train, activity=y_train, x_train)
View(train)
train <- cbind("subject"=subject_train,  "activity" = y_train, x_train)
View(train)
test  <- cbind(subject_test, y_test, x_test)
merged <- rbind(train, test)
View(merged)
names(merged[1:2]) <- c("subject", "activity")
View(merged)
colnames(merged[1:2]) <- c("subject", "activity")
View(merged)
?colnames
View(merged)
colnames(merged)
colnames(merged[1]) <- "subject"
colnames(merged)
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)
colnames(merged)[3:563] <- c(1:561)
colnames(merged)
features <- read.csv("./UCI HAR Dataset/features.txt")
View(features)
features <- read.csv("./UCI HAR Dataset/features.txt", sep="", header=F)
View(features)
?any
z <- "tBodyAcc-mean()-X"
any(c("mean()", "std()"))  %in% z
any(c("mean()", "std()"))  %in% z
"mean()" %in% z
?%in%
?in
??in
??logic
??any
??substr
?scan
?search
?string
??string
?grep
z
regexpr( "mean|std" , z )
grep( "mean|std" , z )
z <- "a"
grep( "mean|std" , z )
z <- "tBodyAcc-std()-X"
grep( "mean|std" , z )
grep( "bbb|aaa" , z )
grepl( "bbb|aaa" , z )
grepl( "mean|std" , z )
sub.features.mean.and.std <- features[grepl("-mean()|-std()", features$V2)]
sub.features.mean.and.std <- features[grepl("-mean()|-std()", features$V2),]
View(sub.features.mean.and.std)
str(sub.features.mean.and.std)
sub.features.mean.and.std$V1
len(sub.features.mean.and.std)
length(sub.features.mean.and.std)
length(sub.features.mean.and.std$V2)
merged.mean.and.std <- merged[, unlist(1,2,sub.features.mean.and.std$V1)]
str(merged.mean.and.std)
merged[,1]
merged.mean.and.std <- merged[, c(1,2,sub.features.mean.and.std$V1)]
merged.mean.and.std <- merged[, c(1,2,sub.features.mean.and.std$V1+2)]
View(merged.mean.and.std)
str(merged.mean.and.std)
train <- cbind(as.factor(subject_train), as.factor(y_train), x_train)
test  <- cbind(as.factor(subject_test), as.factor(y_test), x_test)
merged <- rbind(train, test)
levels(as.factor(merged.mean.and.std$subject))
levels(as.factor(merged.mean.and.std$activity))
View(merged.mean.and.std)
View(features)
View(sub.features.mean.and.std)
activities <- read.csv("./UCI HAR Dataset/activity_labels.txt", sep="", header=F)
activities[1,1]
activities[1,2]
activities[,2]
activities[1,3]
activities[2,2]
activities <- read.csv("./UCI HAR Dataset/activity_labels.txt", sep="", header=F, colClasses=factor)
activities <- read.csv("./UCI HAR Dataset/activity_labels.txt", sep="", header=F, colClasses="factor")
activities <- read.csv("./UCI HAR Dataset/activity_labels.txt", sep="", header=F)
merged.mean.and.std$test_activity <-  activities[merged.mean.and.std$activity,2]
head(merged.mean.and.std$test_activity)
merged.mean.and.std$test_activity
head( merged.mean.and.std$activity, merged.mean.and.std$test_activity , n=100)
head( c(merged.mean.and.std$activity, merged.mean.and.std$test_activity ), n=100)
View(merged.mean.and.std)
View(activities)
merged.mean.and.std$activity <-  activities[merged.mean.and.std$activity,2]
head(merged.mean.and.std$activity, n=100)
head(merged.mean.and.std, n=1)
merged.mean.and.std$test_activity <- NULL
head(merged.mean.and.std, n=1)
cols(merged.mean.and.std)
col(merged.mean.and.std)
?cols
?col
ncol(merged.mean.and.std)
colnames(merged.mean.and.std)[3:79]
sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:79] <- sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:81] <- sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:81]
sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:81]
colnames(merged.mean.and.std)[3:81] <- sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:81]
View(merged.mean.and.std)
sub.features.mean.and.std$V2
colnames(merged.mean.and.std)[3:81] <- as.character(sub.features.mean.and.std$V2)
colnames(merged.mean.and.std)[3:81]
View(features)
View(merged.mean.and.std)
?group
?melt
??melt
?split
dd <- split(merged.mean.and.std, c(merged.mean.and.std$subject, merged.mean.and.std$activity))
dd <- split(merged.mean.and.std, as.list(merged.mean.and.std$subject, merged.mean.and.std$activity))
str(dd)
head(dd)
?aggregate
ee <- aggregate(merged.mean.and.std, by=list(merged.mean.and.std$subject, merged.mean.and.std$activity), mean )
warnings
warnings()
str(activity)
str(merged.mean.and.std$activity)
str(merged.mean.and.std$subject)
ee <- aggregate(merged.mean.and.std[3:81], by=list(merged.mean.and.std$subject, merged.mean.and.std$activity), mean )
View(ee)
ls
ncol(merged)
average_measures <- aggregate(merged.mean.and.std[3:563], by=list(merged.mean.and.std$subject, merged.mean.and.std$activity), mean )
colnames(merged)
colnames(merged)[3:563] <- features$V2
colnames(merged)
colnames(merged)[3:563] <- as.character(features$V2)
colnames(merged)
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)
average_measures <- aggregate(merged[3:563], by=list(merged$subject, merged$activity), mean )
warnings
warnings()
View(average_measures)
View(merged)
head(merged, n= 1)
str(merged)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
?aggregate
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
detect <- merged[ !is.numeric(merged[3:563]) ]
detect <- merged[ !is.numeric(merged[3:563]), ]
detect <- merged[ !is.numeric(merged[, 3:563]), ]
detect <- merged[ any(!is.numeric(merged[, 3:563])), ]
merged[ !is.numeric(merged)[,3], ]
merged[ !is.numeric(merged[,3]), ]
average_measures <- aggregate(merged[3:], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), numcolwise(mean) )
??numcolwise
library(plyr)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), numcolwise(mean) )
average_measures <- aggregate(merged, by=list(as.factor(merged$subject), as.factor(merged$activity)), numcolwise(mean) )
?ddply
ddply(merged, .(subject, activity), numcolwise(mean))
average_measures <- ddply(merged, .(subject, activity), numcolwise(mean))
View(average_measures)
?is.numeric
View(merged)
merged[3:563] <- as.number(merged[3:563])
merged[3:563] <- as.numeric(merged[3:563])
str(merged[3:563])
average_measures <- ddply(merged, .(subject, activity), mean)
merged[,3]
merged[1:5000,3]
merged[5000:10299,3]
test <- complete.cases(merged)
test <- merged[complete.cases(merged),]
?aggregate
any(!is.numeric(merged[,3]))
any(!is.numeric(merged[,4]))
any(!is.numeric(merged[,5]))
any(!is.numeric(merged[,6]))
head(merged[,2])
head(merged[,3])
for ( i in [3:563]){
if any(!is.numeric(merged[,i])){
print i
}
}
for ( i in [3:563] ) {
if any(!is.numeric(merged[,i])){
print i
}
}
for ( i in c(3:563) ) {
if any(!is.numeric(merged[,i])){
print i
}
}
for ( i in c(3:563) ) {
if (any(!is.numeric(merged[,i]))){
print i
}
}
any(!is.numeric(merged[,3]))
ddd <- c(3:10)
ddd
for (i in ddd) {print i}
for (i in ddd); {print i}
for (i in ddd)  print i
for ( i in c(3:563) ) { print i}
for ( i in c(3:563) ) { print i;}
for ( i in 3:563 ) {
if ( any(!is.numeric(merged[,i])) ){
print i
}
}
for ( i in 3:563 ) {
if ( any(!is.numeric(merged[,i])) ){
print(i);
}
}
merged[, 378]
merged[, 377]
merged[, 378]
merged[, 379]
merged[, 378]
# Q1: Merges the training and the test sets to create one data set
x_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", sep="", header=F, colClasses=numeric)
subject_train <-  read.csv("./UCI HAR Dataset/train/subject_train.txt", sep="", header=F, colClasses=factor)
y_train  <- read.csv("./UCI HAR Dataset/train/y_train.txt", sep="", header=F, colClasses=factor)
x_test <- read.csv("./UCI HAR Dataset/test/X_test.txt", sep="", header=F, colClasses=numeric)
subject_test <-  read.csv("./UCI HAR Dataset/test/subject_test.txt", sep="", header=F, colClasses=factor)
y_test <- read.csv("./UCI HAR Dataset/test/y_test.txt", sep="", header=F, colClasses=factor)
train <- cbind(subject_train, y_train, x_train)
test  <- cbind(subject_test, y_test, x_test)
merged <- rbind(train, test)
?read.csv
x_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", sep="", header=F, colClasses=numeric)
x_train <- read.csv("./UCI HAR Dataset/train/X_train.txt", sep="", header=F, colClasses="numeric")
subject_train <-  read.csv("./UCI HAR Dataset/train/subject_train.txt", sep="", header=F, colClasses="factor")
y_train  <- read.csv("./UCI HAR Dataset/train/y_train.txt", sep="", header=F, colClasses="factor")
x_test <- read.csv("./UCI HAR Dataset/test/X_test.txt", sep="", header=F, colClasses="numeric")
subject_test <-  read.csv("./UCI HAR Dataset/test/subject_test.txt", sep="", header=F, colClasses="factor")
y_test <- read.csv("./UCI HAR Dataset/test/y_test.txt", sep="", header=F, colClasses="factor")
subject_test <-  read.csv("./UCI HAR Dataset/test/subject_test.txt", sep="", header=F, colClasses="factor")
y_test <- read.csv("./UCI HAR Dataset/test/y_test.txt", sep="", header=F, colClasses="factor")
x_test <- read.csv("./UCI HAR Dataset/test/X_test.txt", sep="", header=F)
x_test[454,]
View(x_test)
x_test[454,]
str(x_test[454,])
merged <- rbind(train, test)
View(x_test)
?rows
rows.test <- nrow(x_test)
cols.test <- ncol(x_test)
print(1,2)
for(j in 1:rows.test)
for ( i in 1:cols.test ) {
if ( any(!is.numeric(merged[j,i])) ){
print(sprintf("%d, %d",j,i));
}
}
for(j in 1:rows.test)
for ( i in 1:cols.test ) {
if ( any(!is.numeric(x_test[j,i])) ){
print(sprintf("%d, %d",j,i));
}
}
rows.test <- nrow(x_test)
cols.test <- ncol(x_test)
for(j in 1:rows.test)
for ( i in 1:cols.test ) {
if ( !is.numeric(x_test[j,i]) ){
print(sprintf("%d, %d",j,i));
}
}
x_test[1,1]
rows.test <- nrow(x_test)
cols.test <- ncol(x_test)
for(j in 1:rows.test)
for ( i in 1:cols.test ) {
if ( !is.numeric(x_test[j,i]) ){
print(sprintf("%d, %d",j,i));
}
}
for(j in 1:rows.test){
for ( i in 1:cols.test ) {
if ( !is.numeric(x_test[j,i]) ){
print(sprintf("%d, %d",j,i));
}
}
}
library(reshape2)
?dcast
?write.table
?mkdir
??mkdir
?file.exist
?file.exists
??mkdir
if (!file.exists("./data")){
dir.create("./data")
}
setwd("~/personal/data.sciences/Getting.and.cleaning.data_course.project.2")
if (!file.exists("./data")){
dir.create("./data")
}
source("run_analysis.R")
View(average_measures)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
average_measures <- average_measures[order(as.numeric(average_measures$subject)),]
View(average_measures)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
View(average_measures)
colnames(average_measures)[1:2] <- c("subject", "activity")
View(average_measures)
b <- average_measures[order(as.numeric(average_measures$subject)),]
View(b)
View(average_measures)
View(b)
average_measures$subject <- as.numeric(average_measures$subject)
b <- average_measures[order(as.numeric(average_measures$subject)),]
View(b)
average_measures <- average_measures[order(as.numeric(average_measures$subject)),]
View(average_measures)
write.table(average_measures, file="./Data/average.meansurements.group.by.subject.activity.txt", row.names = F)
average_measures$activity <-  activities[as.numeric(average_measures$activity),2]
View(average_measures)
write.table(average_measures, file="./Data/average.meansurements.group.by.subject.activity.txt", row.names = F)
test_merged.mean.and.std <- read.csv("./Data/meansurements.mean.std.group.by.subject.activity.txt", sep="", header=T)
View(test_merged.mean.and.std)
test_average_measures <-  read.csv("./Data/average.meansurements.group.by.subject.activity.txt", sep="", header=T)
View(test_average_measures)
View(test_average_measures)
View(merged.mean.and.std)
b
View(b)
dirname(file.path("","p1","p2","p3","filename"))
basename(file.path("","p1","p2","p3", c("file1", "file2")))
dirname("./dir", "train/X_train.txt")
dirname("./dir", "train","X_train.txt")
dirname("dir", "train","X_train.txt")
?file.path
filepath("./dir", "train/X_train.txt")
file.path("./dir", "train/X_train.txt")
dataset.rel.path <- function(rel.path){
basedir = "./UCI HAR Dataset"
filepath(basedir,rel.path)
}
dataset.rel.path("train/X_train.txt")
dataset.rel.path <- function(rel.path){
basedir = "./UCI HAR Dataset"
file.path(basedir,rel.path)
}
dataset.rel.path("train/X_train.txt")
dataset.rel.path("/train/X_train.txt")
test_merged.mean.and.std <- read.csv("./Data//meansurements.mean.std.group.by.subject.activity.txt", sep="", header=T)
View(test_merged.mean.and.std)
?as.numeric
??numeric
names(b)
names(b)[3,563]
names(b)[3:563]
"a" + "b"
"a" . "b"
?paste
names(b)[3,563] <- paste("avg", names(b)[3,563], sep=" ")
names(b)[3:563] <- paste("avg", names(b)[3:563], sep=" ")
names(b)
View(b)
names(average_measures)[1:563]  <- paste( "average", average_measures)[1:563],sep="_" )
names(average_measures)[3:563]  <- paste( "average", average_measures)[3:563] , sep="_" )
names(average_measures)[3:563]  <- paste( "average", average_measures[3:563] , sep="_" )  # columns name refining
View(average_measures)
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)[3:563] <- as.character(features$V2)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
colnames(average_measures)[1:2] <- c("subject", "activity")  # set column names
average_measures$subject <- as.numeric(average_measures$subject)  # convert to number for proper ordering
average_measures$activity <-  activities[as.numeric(average_measures$activity),2] # activity: number to text
average_measures <- average_measures[order(as.numeric(average_measures$subject)),] # order by subject no.
names(average_measures)[3:563]  <- paste( "average", average_measures[3:563] , sep="_" )  # columns name refining
View(average_measures)
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)[3:563] <- as.character(features$V2)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
colnames(average_measures)[1:2] <- c("subject", "activity")  # set column names
average_measures$subject <- as.numeric(average_measures$subject)  # convert to number for proper ordering
average_measures$activity <-  activities[as.numeric(average_measures$activity),2] # activity: number to text
average_measures <- average_measures[order(as.numeric(average_measures$subject)),] # order by subject no.
names(average_measures)[3:563]  <- paste( "average", names(average_measures)[3:563] , sep="_" )
View(average_measures)
ncol(train) == ncol(test)
View(average_measures)
features$V2
View(features)
View(activities)
View(sub.features.mean.and.std)
View(sub.features.mean.and.std)
x_test.again <- read.csv(dataset.rel.path("test/X_test.txt"), sep="", header=F,colClasses=“numeric”)
x_test.again <- read.csv(dataset.rel.path("test/X_test.txt"), sep="", header=F,colClasses=“numeric”)
x_test.again <- read.csv(dataset.rel.path("test/X_test.txt"), sep="", header=F,colClasses="numeric")
?read.delim
x_test <- read.delim(dataset.rel.path("test/X_test.txt"), sep="", header=F, colClasses="numeric")
x_test <- read.csv(dataset.rel.path("test/X_test.txt"), sep="", header=F, colClasses="numeric")
View(x_test)
x_test[453:455,375:377]
V375       V376       V377
453 -0.6180452 -0.2643850 -0.7180483
454 -0.3637524  0.1446149 -0.3050261
455 -0.3117580 -0.1523274 -0.6076518
x_test[453:455,375:377]
dataset.rel.path <- function(rel.path){
basedir = "./UCI HAR Dataset"
file.path(basedir,rel.path)
}
## Q1: Merges the training and the test sets to create one data set
x_train <- read.delim(dataset.rel.path("train/X_train.txt"), sep="", header=F, colClasses="numeric")
subject_train <-  read.delim(dataset.rel.path("train/subject_train.txt"), sep="", header=F, colClasses="factor")
y_train  <- read.delim(dataset.rel.path("train/y_train.txt)", sep="", header=F, colClasses="factor")
x_test <- read.delim(dataset.rel.path("test/X_test.txt"), sep="", header=F, colClasses="numeric")
subject_test <-  read.delim(dataset.rel.path("test/subject_test.txt"), sep="", header=F, colClasses="factor")
y_test <- read.delim(dataset.rel.path("test/y_test.txt"), sep="", header=F, colClasses="factor")
y_train  <- read.delim(dataset.rel.path("train/y_train.txt)", sep="", header=F, colClasses="factor")
y_train  <- read.delim(dataset.rel.path("train/y_train.txt"), sep="", header=F, colClasses="factor")
y_train  <- read.delim(dataset.rel.path("train/y_train.txt"), sep="", header=F, colClasses="factor")
merged <- rbind(train, test)
## basic titles setup
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)[3:563] <- c(1:561)
View(merged)
features <- read.delim(dataset.rel.path("features.txt"), sep="", header=F)
sub.features.mean.and.std <- features[grepl("-mean()|-std()", features$V2),] # column idx
merged.mean.and.std <- merged[, c(1,2,sub.features.mean.and.std$V1+2)]  # +2 due to heading cols 'subject' and 'activity'
activities <- read.delim(dataset.rel.path("activity_labels.txt"), sep="", header=F)
merged.mean.and.std$activity <-  activities[merged.mean.and.std$activity,2] # CODE_SMELL: via index, not dictionary-alike lookup
## Q4: Appropriately labels the data set with descriptive variable names.
# ncol(merged.mean.and.std) # 81
colnames(merged.mean.and.std)[3:81] <- as.character(sub.features.mean.and.std$V2) #  starting from 3 due to heading cols 'subject' and 'activity'
View(merged.mean.and.std)
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)[3:563] <- as.character(features$V2)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
colnames(average_measures)[1:2] <- c("subject", "activity")  # set column names
average_measures$subject <- as.numeric(average_measures$subject)  # convert to number for proper ordering
average_measures$activity <-  activities[as.numeric(average_measures$activity),2] # activity: number to text
average_measures <- average_measures[order(as.numeric(average_measures$subject)),] # order by subject no.
names(average_measures)[3:563]  <- paste( "average", names(average_measures)[3:563] , sep="_" )  # columns name refining
if (!file.exists("./data")){
dir.create("./data")
}
write.table(merged.mean.and.std, file="./data/meansurements.mean.std.group.by.subject.activity.txt", row.names = F)
write.table(average_measures, file="./data/average.meansurements.group.by.subject.activity.txt", row.names = F)
average_measures$subject <- as.numeric(average_measures$subject)
View(average_measures)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
View(average_measures)
?write.table
colnames(merged)[1:2] <- c("subject", "activity")
colnames(merged)[3:563] <- as.character(features$V2)
average_measures <- aggregate(merged[3:563], by=list(as.factor(merged$subject), as.factor(merged$activity)), mean )
colnames(average_measures)[1:2] <- c("subject", "activity")  # set column names
average_measures$subject <- as.numeric(average_measures$subject)  # convert to number for proper ordering
average_measures$activity <-  activities[as.numeric(average_measures$activity),2] # activity: number to text
average_measures <- average_measures[order(as.numeric(average_measures$subject)),] # order by subject no.
names(average_measures)[3:563]  <- paste( "average", names(average_measures)[3:563] , sep="_" )  # columns name refining
if (!file.exists("./data")){
dir.create("./data")
}
write.table(merged.mean.and.std, file="./data/meansurements.mean.std.group.by.subject.activity.csv", row.names = F, sep = ",")
write.table(average_measures, file="./data/average.meansurements.group.by.subject.activity.csv", row.names = F,sep = ",")
View(features)
View(sub.features.mean.and.std)
test_merged.mean.and.std <- read.delim("./data//meansurements.mean.std.group.by.subject.activity.csv", sep="", header=T)
test_average_measures <-  read.delim("./data/average.meansurements.group.by.subject.activity.csv", sep="", header=T)
View(test_average_measures)
test_merged.mean.and.std <- read.delim("./data//meansurements.mean.std.group.by.subject.activity.csv", sep=",", header=T)
test_average_measures <-  read.delim("./data/average.meansurements.group.by.subject.activity.csv", sep=",", header=T)
View(test_average_measures)
View(test_merged.mean.and.std)
write.table(average_measures, file="./data/average.meansurements.with.subject.activity.csv", row.names = F,sep = ",")
test_average_measures <-  read.delim("./data/average.meansurements.with.subject.activity.csv", sep=",", header=T)
View(test_merged.mean.and.std)
View(test_average_measures)
write.table(merged.mean.and.std, file="./data/meansurements.mean.std.with.subject.activity.csv", row.names = F, sep = ",")
write.table(average_measures, file="./data/average.meansurements.group.by.subject.activity.csv", row.names = F,sep = ",")
test_merged.mean.and.std <- read.delim("./data/meansurements.mean.std.with.subject.activity.csv", sep=",", header=T)
test_average_measures <-  read.delim("./data/average.meansurements.group.by.subject.activity.csv", sep=",", header=T)
View(test_average_measures)
View(test_merged.mean.and.std)
nrow(merged.mean.and.std)
ncol(merged.mean.and.std)
ncol(average_measures)
nrow(average_measures)
write.table(merged.mean.and.std, file="./data/meansurements.mean.std.with.subject.activity.txt", row.names = F, sep = " ")
write.table(average_measures, file="./data/average.meansurements.group.by.subject.activity.txt", row.names = F,sep = " ")
?par
